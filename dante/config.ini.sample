[ELICITED_RESPONSE]
elicited_response_dir = models/ER
toxicity_trigger_twitter = models/ER/toxicity_trigger_roberta_twitter
attracted_sentiment_twitter= models/ER/attracted_sentiment_roberta_twitter
toxicity_trigger_reddit = models/ER/toxicity_trigger_roberta_reddit
attracted_sentiment_reddit= models/ER/attracted_sentiment_roberta_reddit

[AUDIENCE_DIVERSITY]
engagement_data_rockwell = data/rockwell_engagement_data_with_partisanship_just_text.csv
audience_diversity_file = data/audience_diversity_2022-2023_visitor_level.csv
topic_diversity_json = models/AD_rockwell/BERTopic_diversity.json
audience_diversity_dir = models/AD_rockwell

[TOPIC_DIVERSITY]
topic_diversity_dir = models/AD_rockwell
td_1 = models/AD_rockwell/config.json
td_2 = models/AD_rockwell/ctfidf_config.json
td_3 = models/AD_rockwell/topic_embeddings.safetensors
td_4 = models/AD_rockwell/ctfidf.safetensors
td_5 = models/AD_rockwell/BERTopic_diversity.json
td_6 = models/AD_rockwell/topics.json

[RANKER]
# Default redis connection string. Note the environment variable
# REDIS_CONNECTION_STRING takes precedence over this value
redis_db = 'redis://localhost:6379/0'

# HaR normalization boundaries, see dante.app.ranking_server.ranking_server:combine_scores
boundaries = [0.557, 0.572, 0.581, 0.6]

[SCORER]
# Hard time limit for celery tasks, see dante.app.scorer_worker.tasks
KILL_DEADLINE_SECONDS = 5  

# Soft time limit for celery tasks, see dante.app.scorer_worker.tasks
TIME_LIMIT_SECONDS = 4  

# Client timeout, see dante.app.scorer_worker.scorer_basic
#
# Unfortunately Celery timeout granularity is in seconds, and if this value is
# fractional, it will be rounded up to the nearest second when used in `get`
# with the `timeout` parameter.
DEADLINE_SECONDS = 10

; [S3]
; S3_REGION_NAME = 
; S3_ACCESS_KEY = 
; S3_SECRET_ACCESS_KEY = 
; S3_BUCKET = 

; [POSTGRES]
; host =
; port =
; database =
; user =
; password =

; :vim:ft=conf:
